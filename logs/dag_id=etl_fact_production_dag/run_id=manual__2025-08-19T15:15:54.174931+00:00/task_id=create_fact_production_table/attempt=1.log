{"timestamp":"2025-08-19T15:15:55.370941","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-19T15:15:55.371344","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/fact_production.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-19T15:15:55.405509Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:15:55.405993Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:15:55.407811Z","level":"info","event":"Current task name:create_fact_production_table","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:15:55.409797Z","level":"info","event":"Dag name:etl_fact_production_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:15:55.409891Z","level":"info","event":"Creating table if not exists...","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:15:55.407473","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-19T15:15:55.415626","level":"info","event":"Connection Retrieved 'bdd_neon_recette'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-19T15:15:55.569262","level":"info","event":"Running statement: \n            CREATE TABLE IF NOT EXISTS fact_production (\n                variable VARCHAR(255),\n                id_variable VARCHAR(255),\n                valeur DOUBLE PRECISION,\n                unit VARCHAR(255),\n                date_entree TIMESTAMP,\n                id_site VARCHAR(255),\n                type VARCHAR(255),\n                equipement VARCHAR(255),\n                CONSTRAINT unique_production UNIQUE (id_variable, date_entree)\n            );\n        , parameters: None","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-19T15:15:55.631372Z","level":"info","event":"Table fact_production created or already exists","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:15:55.631363","level":"info","event":"Done. Returned value was: Table creation successful","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-08-19T15:15:55.631574","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0198c2e6-acca-7dd9-b15a-195c1af2392f'), task_id='create_fact_production_table', dag_id='etl_fact_production_dag', run_id='manual__2025-08-19T15:15:54.174931+00:00', try_number=1, map_index=-1, hostname='b751e2694e77', context_carrier={}, task=<Task(PythonOperator): create_fact_production_table>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 8, 19, 15, 15, 55, 26220, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/etl_fact_production_dag/runs/manual__2025-08-19T15%3A15%3A54.174931%2B00%3A00/tasks/create_fact_production_table?try_number=1')","logger":"task"}
{"timestamp":"2025-08-19T15:15:55.650872Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:15:55.651802Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:15:55.654813Z","level":"info","event":"Task operator:<Task(PythonOperator): create_fact_production_table>","chan":"stdout","logger":"task"}
