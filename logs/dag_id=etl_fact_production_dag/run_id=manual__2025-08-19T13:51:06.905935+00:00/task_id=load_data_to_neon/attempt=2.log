{"timestamp":"2025-08-19T13:56:10.727082","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-19T13:56:10.727520","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/fact_production.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-19T13:56:10.762780Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:10.763031Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:10.763122Z","level":"info","event":"Current task name:load_data_to_neon","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:10.763219Z","level":"info","event":"Dag name:etl_fact_production_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:10.764054Z","level":"info","event":"Starting data loading...","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:10.773978","level":"warning","event":"/opt/airflow/dags/fact_production.py:112: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n  df_transformed = pd.read_json(json_data, orient='records')\n","logger":"py.warnings"}
{"timestamp":"2025-08-19T13:56:10.779286Z","level":"info","event":"Data received for loading: 366 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:10.780375","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-19T13:56:10.784778","level":"info","event":"Connection Retrieved 'bdd_neon_recette'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-19T13:56:10.979603","level":"info","event":"Running statement: TRUNCATE TABLE fact_production;, parameters: None","logger":"airflow.task.hooks.airflow.providers.postgres.hooks.postgres.PostgresHook"}
{"timestamp":"2025-08-19T13:56:11.048986Z","level":"info","event":"Table truncated","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:11.259093Z","level":"info","event":"Error loading data into Neon: date/time field value out of range: \"1741253012390.0\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:11.259435Z","level":"info","event":"CONTEXT:  COPY fact_production, line 1, column date_entree: \"1741253012390.0\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:11.259662Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:11.276771Z","level":"info","event":"Error in load_data_to_neon: date/time field value out of range: \"1741253012390.0\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:11.277184Z","level":"info","event":"CONTEXT:  COPY fact_production, line 1, column date_entree: \"1741253012390.0\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:11.277386Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:11.277003","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"DatetimeFieldOverflow","exc_value":"date/time field value out of range: \"1741253012390.0\"\nCONTEXT:  COPY fact_production, line 1, column date_entree: \"1741253012390.0\"\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":890,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1177,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":217,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":240,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/fact_production.py","lineno":138,"name":"load_data_to_neon"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-08-19T13:56:11.279146Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:11.279716Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:11.279905Z","level":"info","event":"Task:<Task(PythonOperator): load_data_to_neon>","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:11.280057Z","level":"info","event":"Failure caused by date/time field value out of range: \"1741253012390.0\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:11.280203Z","level":"info","event":"CONTEXT:  COPY fact_production, line 1, column date_entree: \"1741253012390.0\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T13:56:11.280338Z","level":"info","event":"","chan":"stdout","logger":"task"}
