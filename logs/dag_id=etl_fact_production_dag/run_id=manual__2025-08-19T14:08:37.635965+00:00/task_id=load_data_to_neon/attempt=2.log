{"timestamp":"2025-08-19T14:13:45.230439","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-19T14:13:45.230816","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/fact_production.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-19T14:13:45.398454Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.398635Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.398740Z","level":"info","event":"Current task name:load_data_to_neon","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.398837Z","level":"info","event":"Dag name:etl_fact_production_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.399469Z","level":"info","event":"Starting data loading...","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.407250","level":"warning","event":"/opt/airflow/dags/fact_production.py:108: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n  df_transformed = pd.read_json(json_data, orient='records')\n","logger":"py.warnings"}
{"timestamp":"2025-08-19T14:13:45.411846Z","level":"info","event":"Data received for loading: 366 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.412673","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-19T14:13:45.416886","level":"info","event":"Connection Retrieved 'bdd_neon_recette'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-19T14:13:45.676456Z","level":"info","event":"Error loading data into Neon: missing data for column \"id_variable\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.676632Z","level":"info","event":"CONTEXT:  COPY temp_fact_production, line 89: \"\"Changement des couteaux; si l'espace entre rotor et couteaux <2mm ( voir indicateur\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.676702Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.695123Z","level":"info","event":"Error in load_data_to_neon: missing data for column \"id_variable\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.695252Z","level":"info","event":"CONTEXT:  COPY temp_fact_production, line 89: \"\"Changement des couteaux; si l'espace entre rotor et couteaux <2mm ( voir indicateur\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.695342Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.694653","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"BadCopyFileFormat","exc_value":"missing data for column \"id_variable\"\nCONTEXT:  COPY temp_fact_production, line 89: \"\"Changement des couteaux; si l'espace entre rotor et couteaux <2mm ( voir indicateur\"\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":890,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1177,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":217,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":240,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/fact_production.py","lineno":140,"name":"load_data_to_neon"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-08-19T14:13:45.695781Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.696126Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.696412Z","level":"info","event":"Task:<Task(PythonOperator): load_data_to_neon>","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.696655Z","level":"info","event":"Failure caused by missing data for column \"id_variable\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.696866Z","level":"info","event":"CONTEXT:  COPY temp_fact_production, line 89: \"\"Changement des couteaux; si l'espace entre rotor et couteaux <2mm ( voir indicateur\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T14:13:45.697012Z","level":"info","event":"","chan":"stdout","logger":"task"}
