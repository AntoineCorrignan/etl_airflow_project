{"timestamp":"2025-08-19T15:11:04.518840","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-19T15:11:04.519161","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/fact_production.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-19T15:11:04.542404Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.542536Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.542660Z","level":"info","event":"Current task name:load_data_to_neon","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.542725Z","level":"info","event":"Dag name:etl_fact_production_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.543276Z","level":"info","event":"Starting data loading...","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.551758","level":"warning","event":"/opt/airflow/dags/fact_production.py:118: FutureWarning: Passing literal json to 'read_json' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n  df_transformed = pd.read_json(json_data, orient='records')\n","logger":"py.warnings"}
{"timestamp":"2025-08-19T15:11:04.555095Z","level":"info","event":"Data received for loading: 63 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.555954","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-19T15:11:04.561721","level":"info","event":"Connection Retrieved 'bdd_neon_recette'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-19T15:11:04.718915Z","level":"info","event":"Error loading data into Neon: syntax error at or near \"EXIST\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.719320Z","level":"info","event":"LINE 2:                 CREATE TEMP TABLE IF NOT EXIST temp_fact_pro...","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.719562Z","level":"info","event":"                                                 ^","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.719745Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.736083Z","level":"info","event":"Error in load_data_to_neon: syntax error at or near \"EXIST\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.737203Z","level":"info","event":"LINE 2:                 CREATE TEMP TABLE IF NOT EXIST temp_fact_pro...","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.737461Z","level":"info","event":"                                                 ^","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.737659Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.736175","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"SyntaxError","exc_value":"syntax error at or near \"EXIST\"\nLINE 2:                 CREATE TEMP TABLE IF NOT EXIST temp_fact_pro...\n                                                 ^\n","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":890,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1177,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":217,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":240,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/fact_production.py","lineno":144,"name":"load_data_to_neon"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-08-19T15:11:04.758855Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.759086Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.759226Z","level":"info","event":"Task:<Task(PythonOperator): load_data_to_neon>","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.759339Z","level":"info","event":"Failure caused by syntax error at or near \"EXIST\"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.759446Z","level":"info","event":"LINE 2:                 CREATE TEMP TABLE IF NOT EXIST temp_fact_pro...","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.759552Z","level":"info","event":"                                                 ^","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-19T15:11:04.759669Z","level":"info","event":"","chan":"stdout","logger":"task"}
