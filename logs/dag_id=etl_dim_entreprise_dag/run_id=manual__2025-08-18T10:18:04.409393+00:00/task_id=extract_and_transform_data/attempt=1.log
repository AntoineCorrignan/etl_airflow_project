{"timestamp":"2025-08-18T10:18:46.078358","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-18T10:18:46.078638","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/etl_test.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-18T10:18:46.094099Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-18T10:18:46.094197Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-18T10:18:46.094259Z","level":"info","event":"Current task name:extract_and_transform_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-18T10:18:46.094302Z","level":"info","event":"Dag name:etl_dim_entreprise_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-18T10:18:46.095497Z","level":"info","event":"Starting data extraction...","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-18T10:18:46.096264","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py:471: DeprecationWarning: Using Connection.get_connection_from_secrets from `airflow.models` is deprecated.Please use `from airflow.sdk import Connection` instead\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-08-18T10:18:46.099358","level":"info","event":"Connection Retrieved 'administration_recette'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-18T10:18:46.133144Z","level":"info","event":"Companies extracted: 10 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-18T10:18:46.133271Z","level":"info","event":"Addresses extracted: 10 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-18T10:18:46.141159Z","level":"info","event":"Data transformation completed. Final dataset: 10 rows","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-18T10:18:46.141387","level":"info","event":"Done. Returned value was: Successfully processed 10 rows","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-08-18T10:18:46.141525","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0198bcaf-a514-7a3c-930d-38581c226631'), task_id='extract_and_transform_data', dag_id='etl_dim_entreprise_dag', run_id='manual__2025-08-18T10:18:04.409393+00:00', try_number=1, map_index=-1, hostname='548a35449cf5', context_carrier={}, task=<Task(PythonOperator): extract_and_transform_data>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 8, 18, 10, 18, 45, 850878, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/etl_dim_entreprise_dag/runs/manual__2025-08-18T10%3A18%3A04.409393%2B00%3A00/tasks/extract_and_transform_data?try_number=1')","logger":"task"}
{"timestamp":"2025-08-18T10:18:46.149924Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-18T10:18:46.150005Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-18T10:18:46.150076Z","level":"info","event":"Task operator:<Task(PythonOperator): extract_and_transform_data>","chan":"stdout","logger":"task"}
